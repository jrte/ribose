# <cycle-start id="4" type="scavenge" contextid="0" timestamp="2021-04-05T23:12:58.597" intervalms="5243.468" />

interval = (
	'<cycle-start id="' digit+ '" type="scavenge" contextid="' digit+ '" timestamp="' (digit+ ('.:-T':alph))+ digit+ '" '
	('intervalms="', select[`~interval`] clear)
	(digit, paste)+ ('.', paste) (digit, paste)+
	('"', out[`~interval` NL])
	space* '/>' (utf7 - '<')*
);

l0 = (interval$0):alph;
l1 = (interval$1):alph;
l2 = (interval$2):alph;

conjoint = (l0 & l1) | (l0 & l2) | (l1 & l2);

'*** Tintervals tape alphabets must be disjoint' conjoint:enum;

notinterval= (
	(
		((AnyOrNul* @ interval)$(0 1 2))
	@	((l0$(0,0))* (l1$(0,,0))* (l2$(0,,,0))*)*
        (nul$(0,0)) (nul* l0* l1* l2*)* 
	)
	((utf7 - '>')* nul*)* '>' (utf7 - '<')*
);

Tintervals = (notinterval* interval*)* @ (((l2 - NL)$(0,0))* (NL, nl)*)*;

Tintervals$(0,1 2):prsseq `Tintervals.pr`;
Tintervals:save `Tintervals.dfa`;
Tintervals$0:alph:card;

_interval = (
	'<cycle-start id="' digit+ '" type="scavenge"'
	(
		space+
		(
			('intervalms="', select[`~interval`] clear)
			(digit, paste)+ ('.', paste) (digit, paste)+
			('"', out[`~interval` NL] )
		||	((lower* '="') - 'intervalms="')
			(utf7 - '"')* '"'
		)
	)*
	space* '/>' (utf7 - '<')*
)*;
_interval$(0,1 2):prsseq `/tmp/_i.ssq`;

l0 = (_interval$0):alph;
l1 = (_interval$1):alph;
l2 = (_interval$2):alph;

conjoint = (l0 & l1) | (l0 & l2) | (l1 & l2);

'*** Sintervals tape alphabets must be disjoint' conjoint:enum;

_notinterval = (
	(
		((AnyOrNul* @ _interval)$(0 1 2))
	@	((l0$(0,0))* (l1$(0,,0))* (l2$(0,,,0))*)*
		(nul$(0,0)) (nul* l0* l1* l2*)* 
	)
	((utf7 - '>')* nul*)* '>' (utf7 - '<')*
);

Sintervals = (_notinterval* _interval*)* @ (((l2 - NL)$(0,0))* (NL, nl)*)*;

Sintervals$(0,1 2):prsseq `Sintervals.pr`;
Sintervals:save `Sintervals.dfa`;
Sintervals$0:alph:card;
