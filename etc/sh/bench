#! /bin/bash
function strip() {
	local regex="^([A-Za-z]*):[^:]*:[^0-9]*([0-9.]+)[^0-9]*([0-9.]+)[^0-9]*([0-9.]+)[^0-9]*([0-9.]+)[^0-9]*([0-9.]+)[^0-9]*$"
	while read line; do
		if [[ "$line" =~ $regex ]]; then
			echo -n ${BASH_REMATCH[1]}
			for i in 2 3 4 5 6; do
				echo -en "\t ${BASH_REMATCH[$i]}"
			done
			echo
		fi
	done
}
format=cat
if [[ "$1" == "--tsv" ]]; then	
	format=strip
	shift
fi
if (($#<4)); then
	echo "Usage: bench [--tsv] <iteration-count> <model-path> <transducer> <input-path>"
	echo "Use --tsv for tab-delimited output per etc/benchmarks/ribose.ods"
	exit 1
fi 
n=$1
model=$2
transducer=$3
input=$4
shift 4
output="-Djrte.out.enabled=false -Dregex.out.enabled=false"
cp="-cp jars/$(cat version).jar;jars/$(cat version)-test.jar"
for i in $(seq $n); do
	${JAVA_HOME}/bin/java -Dfile.encoding=UTF-8 $output $cp com.characterforming.jrte.test.FileRunner --nil "$model" $transducer "$input" "$@"|$format
done
