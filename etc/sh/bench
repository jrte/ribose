#! /bin/bash
function strip() {
	local regex="^([A-Za-z]*):[^:]*:[^0-9]*([0-9.]+)[^0-9]*([0-9.]+)[^0-9]*([0-9.]+)[^0-9]*([0-9.]+)[^0-9]*([0-9.]+)[^0-9]*$"
	while read line; do
		if [[ "$line" =~ $regex ]]; then
			echo -n ${BASH_REMATCH[1]}
			for i in 2 3 4 5 6; do
				echo -en "\t ${BASH_REMATCH[$i]}"
			done
			echo
		fi
	done
}
jrte=$(realpath $(dirname $0)/../..)
jars=$jrte/jars
version=$(cat $jrte/version)
path="$jars/$version.jar:$jars/$version-test.jar"
vmargs=""
while [[ ! "$1" =~ ^(--tsv|[0-9]+) ]]; do
	vmargs="$vmargs $1";
	shift
	if (($#==0)); then
		echo "Usage: bench [--tsv] <iteration-count> <model-path> <transducer> <input-path>"
		echo "Use --tsv for tab-delimited output per etc/benchmarks/ribose.ods"
		exit 0
	fi
done
format=cat
if [[ "$1" == "--tsv" ]]; then
	format=strip
	shift
fi
if (($#<4)); then
	echo "Usage: bench [--tsv] <iteration-count> <model-path> <input-path> <transducer>..."
	echo "Use --tsv for tab-delimited output per etc/benchmarks/ribose.ods"
	exit 1
fi
n=$1
model=$2
input=$3
shift 3
output="-Djrte.out.enabled=false -Dregex.out.enabled=false"
for t in $@; do for i in $(seq $n); do
	${JAVA_HOME}/bin/java $vmargs -Dfile.encoding=UTF-8 $output -cp "$path" com.characterforming.jrte.test.FileRunner --nil "$model" $t "$input"|$format
done; done
