# <cycle-start id="4" type="scavenge" contextid="0" timestamp="2021-04-05T23:12:58.597" intervalms="5243.468" />

interval = (
	'<cycle-start id="' digit+ '" type="scavenge" contextid="' digit+ '" timestamp="' (digit+ ('.:-T':alph))+ digit+ '" '
	('intervalms="', select[`~interval`] clear)
	(digit, paste)+ ('.', paste) (digit, paste)+
	('"', out[`~interval` X_])
	space* '/>' (utf8 - '<')*
);

a0 = (interval$0):alph;
a1 = (interval$1):alph;
a2 = (interval$2):alph;

conjoint = (a0 & a1) | (a0 & a2) | (a1 & a2);

'*** Tintervals tape alphabets must be disjoint' conjoint:enum;

null = (
	(
		((AnyOrNul* @ interval)$(0 1 2))
	@	((a0$(0,0))* (a1$(0,,0))* (a2$(0,,,0))*)*
		(nul$(0,0)) (nul* a0* a1* a2*)* 
	)
	(utf8 - '<')*
);

Tintervals = nil? (
	((null* interval*)*$(0 1 2))
@	(
		({a0,nul}$(0,0))* (a1$(0,,0))*
		((a2-X_)$(0,,,0))*
		(X_, [[`nl`]])* 
	)*
):dfamin;

Tintervals$(0,1 2):prsseq `build/patterns/automata/Tintervals.pr`;
Tintervals:save `build/patterns/automata/Tintervals.dfa`;

interval = (
	'<cycle-start id="' digit+ '" type="scavenge"'
	(
		space+
		(
				('intervalms="', select clear)
				(digit, paste)+ ('.', paste) (digit, paste)+
				('"', out[X_ Y_])
		||	((lower* '="') - 'intervalms="')
				(utf8 - '"')* '"'
		)
	)*
	space* '/>' (utf8 - '<')*
)*;

a0 = (interval$0):alph;
a1 = (interval$1):alph;
a2 = (interval$2):alph;

conjoint = (a0 & a1) | (a0 & a2) | (a1 & a2);

'*** Sintervals tape alphabets must be disjoint' conjoint:enum;

null = (
	(
		((AnyOrNul* @ interval)$(0 1 2))
	@	((a0$(0,0))* (a1$(0,,0))* (a2$(0,,,0))*)*
		(nul$(0,0)) (nul* a0* a1* a2*)* 
	)
	((utf8 - '>')* nul*)* '>' (utf8 - '<')*
);

Sintervals = nil? (
	((null* interval*)*$(0 1 2))
@	(
		({a0,nul}$(0,0))* (a1$(0,,0))* ((a2-{X_,Y_})$(0,,,0))*
		(X_, [[`~`]])* (Y_, [[`nl`]])*
	)*
):dfamin;

Sintervals$(0,1 2):prsseq `build/patterns/automata/Sintervals.pr`;
Sintervals:save `build/patterns/automata/Sintervals.dfa`;
