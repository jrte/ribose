Sign = ('-', paste)?;
Number = (digit, paste)+;
Binary = [count[`~length` `!eol`]] (byte, paste count)* eol;
Field = clear[X] select[X];

Automaton = (nil?
	('INR', Field @ (X,`~version`)*) Number
	(tab, Field @ (X,`~tapes`)*) Number
	(tab, Field @ (X,`~transitions`)*) Number
	(tab, Field @ (X,`~states`)*) Number
	(tab, Field @ (X,`~symbols`)*) Number
	(nl, header) [Field @ (X,`~from`)*]
	(
		Number
		(tab, Field @ (X,`~to`)*) Number
		(tab, Field @ (X,`~tape`)*) Sign? Number
		(tab, Field @ (X,`~length`)*) Number
		(tab, Field @ (X,`~symbol`)*) Binary
		(nl, transition) [Field @ (X,`~from`)*]
	)*
	(eos, automaton stop)
):dfamin;

Automaton$(0,1 2):prsseq `build/ribose/automata/Automaton.pr`;
Automaton:save `build/ribose/automata/Automaton.dfa`;
